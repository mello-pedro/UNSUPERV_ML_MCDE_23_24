pacman::p_load(tidyverse, tidymodels, kableExtra, broom, corrplot, plotrix, lmtest, psych, car, phia, cowplot, leaps, corrplot, ggplot2, DataExplorer)
#Lendo e fazendo uma primeira observação das variáveis
df_wine <- read.csv("/Users/pedroh.mello/Desktop/MESTRADO_MCDE/ML NAO SUPERVISIONADO/PROJETO_FINAL/WinesClustering.xlsx")
if(!("pacman" %in% installed.packages())){install.packages("pacman")}
pacman::p_load(tidyverse, tidymodels, kableExtra, broom, corrplot, plotrix, lmtest, psych, car, phia, cowplot, leaps, corrplot, ggplot2, DataExplorer)
#Lendo e fazendo uma primeira observação das variáveis
df_wine <- read.csv("/Users/pedroh.mello/Desktop/MESTRADO_MCDE/ML NAO SUPERVISIONADO/PROJETO_FINAL/WinesClustering.xlsx")
pacman::p_load(tidyverse, tidymodels, kableExtra, broom, corrplot, plotrix, lmtest, psych, car, phia, cowplot, leaps, corrplot, ggplot2, DataExplorer, readxl)
#Lendo e fazendo uma primeira observação das variáveis
df_wine <- read_excel("/Users/pedroh.mello/Desktop/MESTRADO_MCDE/ML NAO SUPERVISIONADO/PROJETO_FINAL/WinesClustering.xlsx")
df_wine %>%
head() %>%
kable(format = "latex", booktabs = TRUE, longtable = TRUE) %>%
kable_styling(font_size = 2.5,  latex_options = c("striped", "scale_down"), stripe_color = "gray!15") %>%
column_spec(2, width = "1cm")
View(df_wine)
View(df_wine)
introduce(df_wine) %>%
t() %>%
kable(format = "latex", booktabs = TRUE) %>%
kable_styling(position="center", font_size=8, latex_options = c("striped", "hold_position"), stripe_color = "gray!15")
plot_missing(df_wine)
pacman::p_load(tidyverse, tidymodels, kableExtra, broom, corrplot, plotrix, lmtest, psych, car, phia, cowplot, leaps, corrplot, ggplot2, DataExplorer, readxl, dataMaid)
makeDataReport(df_wine, output = "latex", replace = TRUE, reportTitle = "Wine Dataset Report")
pacman::p_load(tidyverse, tidymodels, kableExtra, broom, corrplot, plotrix, lmtest, psych, car, phia, cowplot, leaps, corrplot, ggplot2, DataExplorer, readxl, skimr)
skim(df_wine) %>%
kable(format = "latex", booktabs = TRUE) %>%
kable_styling(position="center", font_size=8, latex_options = c("striped", "hold_position"), stripe_color = "gray!15")
str(df_wine)
#converter Cultivars para categórica
df_wine <- df_wine %>%
mutate(Cultivars = factor(Cultivars))
#converter as demais vars para num
df_wine <- df_wine %>%
mutate(across(-Cultivars, as.numeric))
View(df_wine)
View(df_wine)
#converter Cultivars para categórica
df_wine <- df_wine %>%
mutate(Cultivars = factor(Cultivars))
#converter as demais vars para num
df_wine <- df_wine %>%
mutate(across(-Cultivars, as.numeric))
# Verificar valores duplicados
df_wine <- df_wine %>%
distinct()
boxplot(df_wine)
# Definir as variáveis numéricas
num_var <- c('Alcohol', 'Malic_Acid', 'Ash', 'Ash_Alcanity', 'Magnesium',
'Total_Phenols', 'Flavanoids', 'Nonflavanoid_Phenols',
'Proanthocyanins', 'Color_Intensity', 'Hue', 'OD280', 'Proline')
# Plotar os boxplots
boxplots_list <- lapply(num_var, function(var) {
ggplot(df_wine, aes_string(y = var)) +
stat_boxplot(geom = "errorbar", width = 0.5) +
geom_boxplot(outlier.colour = "blue", fill = "grey", outlier.shape = 16,
outlier.size = 2, notch = FALSE) +
theme(legend.position = "bottom", plot.title = element_text(size = 8)) +
labs(y = var, x = "contagem") +
ggtitle(paste("Box plot de contagem para", var))
})
# Organizar os boxplots em 3 linhas e 2 colunas
grid.arrange(grobs = boxplots_list, ncol = 2)
pacman::p_load(tidyverse, tidymodels, kableExtra, broom, corrplot, plotrix, lmtest, psych, car, phia, cowplot, leaps, corrplot, ggplot2, DataExplorer, readxl, skimr, gridExtra)
# Definir as variáveis numéricas
num_var <- c('Alcohol', 'Malic_Acid', 'Ash', 'Ash_Alcanity', 'Magnesium',
'Total_Phenols', 'Flavanoids', 'Nonflavanoid_Phenols',
'Proanthocyanins', 'Color_Intensity', 'Hue', 'OD280', 'Proline')
# Plotar os boxplots
boxplots_list <- lapply(num_var, function(var) {
ggplot(df_wine, aes_string(y = var)) +
stat_boxplot(geom = "errorbar", width = 0.5) +
geom_boxplot(outlier.colour = "blue", fill = "grey", outlier.shape = 16,
outlier.size = 2, notch = FALSE) +
theme(legend.position = "bottom", plot.title = element_text(size = 8)) +
labs(y = var, x = "contagem") +
ggtitle(paste("Box plot de contagem para", var))
})
# Organizar os boxplots em 3 linhas e 2 colunas
grid.arrange(grobs = boxplots_list, ncol = 2)
# Definir as variáveis numéricas
num_var <- c('Alcohol', 'Malic_Acid', 'Ash', 'Ash_Alcanity', 'Magnesium',
'Total_Phenols', 'Flavanoids', 'Nonflavanoid_Phenols',
'Proanthocyanins', 'Color_Intensity', 'Hue', 'OD280', 'Proline')
# Plotar os boxplots
boxplots_list <- lapply(num_var, function(var) {
ggplot(df_wine, aes_string(y = var)) +
stat_boxplot(geom = "errorbar", width = 0.5) +
geom_boxplot(outlier.colour = "blue", fill = "grey", outlier.shape = 16,
outlier.size = 2, notch = FALSE) +
theme(legend.position = "bottom", plot.title = element_text(size = 8)) +
labs(y = var, x = "contagem") +
ggtitle(paste("Box plot de contagem para", var))
})
# Organizar os boxplots em 3 linhas e 2 colunas
grid.arrange(grobs = boxplots_list, ncol = 2, nrow = 3)
# Definir as variáveis numéricas
num_var <- c('Alcohol', 'Malic_Acid', 'Ash', 'Ash_Alcanity', 'Magnesium',
'Total_Phenols', 'Flavanoids', 'Nonflavanoid_Phenols',
'Proanthocyanins', 'Color_Intensity', 'Hue', 'OD280', 'Proline')
# Plotar os boxplots
boxplots_list <- lapply(num_var, function(var) {
ggplot(df_wine, aes_string(y = var)) +
stat_boxplot(geom = "errorbar", width = 0.5) +
geom_boxplot(outlier.colour = "blue", fill = "grey", outlier.shape = 16,
outlier.size = 2, notch = FALSE) +
theme(legend.position = "bottom", plot.title = element_text(size = 8)) +
labs(y = var, x = "contagem") +
ggtitle(paste("Box plot de contagem para", var))
})
# Organizar os boxplots em 3 linhas e 2 colunas
grid.arrange(grobs = boxplots_list, ncol = 3)
# Definir as variáveis numéricas
num_var <- c('Alcohol', 'Malic_Acid', 'Ash', 'Ash_Alcanity', 'Magnesium',
'Total_Phenols', 'Flavanoids', 'Nonflavanoid_Phenols',
'Proanthocyanins', 'Color_Intensity', 'Hue', 'OD280', 'Proline')
# Plotar os boxplots
boxplots_list <- lapply(num_var, function(var) {
ggplot(df_wine, aes_string(y = var)) +
stat_boxplot(geom = "errorbar", width = 0.5) +
geom_boxplot(outlier.colour = "blue", fill = "grey", outlier.shape = 16,
outlier.size = 2, notch = FALSE) +
theme(legend.position = "bottom", plot.title = element_text(size = 8)) +
labs(y = var, x = "contagem") +
ggtitle(paste("Box plot de contagem para", var))
})
# Organizar os boxplots em 3 linhas e 2 colunas
grid.arrange(grobs = boxplots_list, ncol = 4)
# Definir as variáveis numéricas
num_var <- c('Alcohol', 'Malic_Acid', 'Ash', 'Ash_Alcanity', 'Magnesium',
'Total_Phenols', 'Flavanoids', 'Nonflavanoid_Phenols',
'Proanthocyanins', 'Color_Intensity', 'Hue', 'OD280', 'Proline')
# Plotar os boxplots
boxplots_list <- lapply(num_var, function(var) {
ggplot(df_wine, aes_string(y = var)) +
stat_boxplot(geom = "errorbar", width = 0.5) +
geom_boxplot(outlier.colour = "blue", fill = "grey", outlier.shape = 16,
outlier.size = 2, notch = FALSE) +
theme(legend.position = "bottom", plot.title = element_text(size = 8)) +
labs(y = var, x = "contagem") +
ggtitle(paste("Box plot de contagem para", var))
})
# Organizar os boxplots em 3 linhas e 2 colunas
grid.arrange(grobs = boxplots_list, ncol = 3, nrow = 5)
#Salvar os dados limpos em um novo ficheiro csv
write.csv(df_wine, "wine_clean.csv", row.names = FALSE)
#Carregar os dados limpos do ficheiro
wine_clean <- read.csv("wine_clean.csv", header = TRUE)
# Calculando a matriz de correlação
cor_matrix <- cor(wine[, sapply(wine, is.numeric)])
#Carregar os dados limpos do ficheiro
wine_clean <- read.csv("wine_clean.csv", header = TRUE)
# Calculando a matriz de correlação
cor_matrix <- cor(wine_clean[, sapply(wine_clean, is.numeric)])
# Visualizando a matriz de correlação
corrplot(cor_matrix, method = "color", type = "upper",
tl.col = "black", tl.srt = 45)
#Carregar os dados limpos do ficheiro
wine_clean <- read.csv("wine_clean.csv", header = TRUE)
# Calculando a matriz de correlação
cor_matrix <- cor(wine_clean[, sapply(wine_clean, is.numeric)])
# Heatmap da matriz de correlação
heatmap(cor_matrix, Rowv = NA, Colv = NA, col = heat.colors(256),
scale = "column", margins = c(5, 10))
#Carregar os dados limpos do ficheiro
wine_clean <- read.csv("wine_clean.csv", header = TRUE)
# Calcular a matriz de correlação
correlation_matrix <- cor(wine_clean, method = "pearson")
# Converter a matriz em um data frame
correlation_df <- as.data.frame(as.table(correlation_matrix))
names(correlation_df) <- c("Var1", "Var2", "Correlation")
# Plot da matriz de correlação como um heatmap
ggplot(correlation_df, aes(x = Var1, y = Var2, fill = Correlation)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 0, limits = c(-1, 1),
name = "Correlação de Pearson") +
geom_text(aes(label = round(Correlation, 2)), size = 3, color = "black") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = NULL, y = NULL, title = "Matriz de Correlação")
#Carregar os dados limpos do ficheiro
wine_clean <- read.csv("wine_clean.csv", header = TRUE)
# Calcular a matriz de correlação
correlation_matrix <- cor(wine_clean, method = "pearson")
# Converter a matriz em um data frame
correlation_df <- as.data.frame(as.table(correlation_matrix))
names(correlation_df) <- c("Var1", "Var2", "Correlation")
# Plot da matriz de correlação como um heatmap
ggplot(correlation_df, aes(x = Var1, y = Var2, fill = Correlation)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 0, limits = c(-1, 1),
name = "Correlação de Pearson") +
geom_text(aes(label = round(Correlation, 2)), size = 2, color = "black") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = NULL, y = NULL, title = "Matriz de Correlação")
#Carregar os dados limpos do ficheiro
wine_clean <- read.csv("wine_clean.csv", header = TRUE)
# Calcular a matriz de correlação
correlation_matrix <- cor(wine_clean, method = "pearson")
# Converter a matriz em um data frame
correlation_df <- as.data.frame(as.table(correlation_matrix))
names(correlation_df) <- c("Var1", "Var2", "Correlation")
# Plot da matriz de correlação como um heatmap
ggplot(correlation_df, aes(x = Var1, y = Var2, fill = Correlation)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 0, limits = c(-1, 1),
name = "Correlação de Pearson") +
geom_text(aes(label = round(Correlation, 2)), size = 2, color = "black") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = NULL, y = NULL, title = "Matriz de Correlação") +
theme(plot.title = element_text(hjust = 0.5))
